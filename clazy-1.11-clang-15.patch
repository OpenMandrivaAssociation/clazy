diff -up clazy-1.11/src/checkbase.cpp.omv~ clazy-1.11/src/checkbase.cpp
--- clazy-1.11/src/checkbase.cpp.omv~	2022-09-01 16:23:34.987109436 +0200
+++ clazy-1.11/src/checkbase.cpp	2022-09-01 21:01:52.861432488 +0200
@@ -105,7 +105,7 @@ void ClazyPreprocessorCallbacks::MacroDe
 }
 
 void ClazyPreprocessorCallbacks::InclusionDirective(clang::SourceLocation HashLoc, const clang::Token &IncludeTok, clang::StringRef FileName, bool IsAngled,
-                                                    clang::CharSourceRange FilenameRange, const clang::FileEntry *File, clang::StringRef SearchPath,
+                                                    clang::CharSourceRange FilenameRange, Optional<clang::FileEntryRef> File, clang::StringRef SearchPath,
                                                     clang::StringRef RelativePath, const clang::Module *Imported, clang::SrcMgr::CharacteristicKind FileType)
 {
     check->VisitInclusionDirective(HashLoc, IncludeTok, FileName, IsAngled, FilenameRange, File, SearchPath, RelativePath, Imported, FileType);
@@ -182,7 +182,7 @@ void CheckBase::VisitEndif(SourceLocatio
 }
 
 void CheckBase::VisitInclusionDirective(clang::SourceLocation , const clang::Token &, clang::StringRef , bool ,
-                        clang::CharSourceRange , const clang::FileEntry *, clang::StringRef ,
+                        clang::CharSourceRange , llvm::Optional<clang::FileEntryRef>, clang::StringRef ,
                         clang::StringRef , const clang::Module *, clang::SrcMgr::CharacteristicKind )
 {
     // Overriden in derived classes
diff -up clazy-1.11/src/checkbase.h.omv~ clazy-1.11/src/checkbase.h
--- clazy-1.11/src/checkbase.h.omv~	2022-09-01 16:23:06.566341218 +0200
+++ clazy-1.11/src/checkbase.h	2022-09-01 21:02:32.110042473 +0200
@@ -91,7 +91,7 @@ public:
     void Else(clang::SourceLocation loc, clang::SourceLocation ifLoc) override;
     void Endif(clang::SourceLocation loc, clang::SourceLocation ifLoc) override;
     void InclusionDirective(clang::SourceLocation HashLoc, const clang::Token &IncludeTok, clang::StringRef FileName, bool IsAngled,
-                            clang::CharSourceRange FilenameRange, const clang::FileEntry *File, clang::StringRef SearchPath,
+                            clang::CharSourceRange FilenameRange, llvm::Optional<clang::FileEntryRef> File, clang::StringRef SearchPath,
                             clang::StringRef RelativePath, const clang::Module *Imported, clang::SrcMgr::CharacteristicKind FileType) override;
 private:
     CheckBase *const check;
@@ -151,7 +151,7 @@ protected:
     virtual void VisitElse(clang::SourceLocation loc, clang::SourceLocation ifLoc);
     virtual void VisitEndif(clang::SourceLocation loc, clang::SourceLocation ifLoc);
     virtual void VisitInclusionDirective(clang::SourceLocation HashLoc, const clang::Token &IncludeTok, clang::StringRef FileName, bool IsAngled,
-                            clang::CharSourceRange FilenameRange, const clang::FileEntry *File, clang::StringRef SearchPath,
+                            clang::CharSourceRange FilenameRange, llvm::Optional<clang::FileEntryRef> File, clang::StringRef SearchPath,
                             clang::StringRef RelativePath, const clang::Module *Imported, clang::SrcMgr::CharacteristicKind FileType);
 
     void enablePreProcessorCallbacks();
diff -up clazy-1.11/src/checks/manuallevel/qt6-fwd-fixes.cpp.omv~ clazy-1.11/src/checks/manuallevel/qt6-fwd-fixes.cpp
--- clazy-1.11/src/checks/manuallevel/qt6-fwd-fixes.cpp.omv~	2022-09-01 21:08:43.991381474 +0200
+++ clazy-1.11/src/checks/manuallevel/qt6-fwd-fixes.cpp	2022-09-01 21:08:59.432230485 +0200
@@ -166,7 +166,7 @@ void Qt6FwdFixes::VisitDecl(clang::Decl
 }
 
 void Qt6FwdFixes::VisitInclusionDirective(clang::SourceLocation HashLoc, const clang::Token &IncludeTok, clang::StringRef FileName, bool IsAngled,
-                        clang::CharSourceRange FilenameRange, const clang::FileEntry *File, clang::StringRef SearchPath,
+                        clang::CharSourceRange FilenameRange, llvm::Optional<clang::FileEntryRef> File, clang::StringRef SearchPath,
                         clang::StringRef RelativePath, const clang::Module *Imported, clang::SrcMgr::CharacteristicKind FileType)
 {
     auto current_file = m_sm.getFilename(HashLoc);
diff -up clazy-1.11/src/checks/manuallevel/qt6-fwd-fixes.h.omv~ clazy-1.11/src/checks/manuallevel/qt6-fwd-fixes.h
--- clazy-1.11/src/checks/manuallevel/qt6-fwd-fixes.h.omv~	2022-09-01 21:08:00.505807047 +0200
+++ clazy-1.11/src/checks/manuallevel/qt6-fwd-fixes.h	2022-09-01 21:08:16.629649189 +0200
@@ -47,7 +47,7 @@ public:
     explicit Qt6FwdFixes(const std::string &name, ClazyContext *context);
     void VisitDecl(clang::Decl *decl) override;
     void VisitInclusionDirective(clang::SourceLocation HashLoc, const clang::Token &IncludeTok, clang::StringRef FileName, bool IsAngled,
-                            clang::CharSourceRange FilenameRange, const clang::FileEntry *File, clang::StringRef SearchPath,
+                            clang::CharSourceRange FilenameRange, llvm::Optional<clang::FileEntryRef> File, clang::StringRef SearchPath,
                             clang::StringRef RelativePath, const clang::Module *Imported, clang::SrcMgr::CharacteristicKind FileType) override;
     bool m_including_qcontainerfwd = false;
     std::set<clang::StringRef> m_qcontainerfwd_included_in_files;
diff -up clazy-1.11/src/checks/manuallevel/qt6-header-fixes.cpp.omv~ clazy-1.11/src/checks/manuallevel/qt6-header-fixes.cpp
--- clazy-1.11/src/checks/manuallevel/qt6-header-fixes.cpp.omv~	2022-09-01 21:05:11.141470221 +0200
+++ clazy-1.11/src/checks/manuallevel/qt6-header-fixes.cpp	2022-09-01 21:05:28.660297709 +0200
@@ -270,7 +270,7 @@ Qt6HeaderFixes::Qt6HeaderFixes(const std
 }
 
 void Qt6HeaderFixes::VisitInclusionDirective(clang::SourceLocation HashLoc, const clang::Token &IncludeTok, clang::StringRef FileName, bool IsAngled,
-                        clang::CharSourceRange FilenameRange, const clang::FileEntry *File, clang::StringRef SearchPath,
+                        clang::CharSourceRange FilenameRange, llvm::Optional<clang::FileEntryRef> File, clang::StringRef SearchPath,
                         clang::StringRef RelativePath, const clang::Module *Imported, clang::SrcMgr::CharacteristicKind FileType)
 {
     if (shouldIgnoreFile(HashLoc))
diff -up clazy-1.11/src/checks/manuallevel/qt6-header-fixes.h.omv~ clazy-1.11/src/checks/manuallevel/qt6-header-fixes.h
--- clazy-1.11/src/checks/manuallevel/qt6-header-fixes.h.omv~	2022-09-01 21:04:23.464940344 +0200
+++ clazy-1.11/src/checks/manuallevel/qt6-header-fixes.h	2022-09-01 21:04:41.786759564 +0200
@@ -46,7 +46,7 @@ class Qt6HeaderFixes
 public:
     explicit Qt6HeaderFixes(const std::string &name, ClazyContext *context);
     void VisitInclusionDirective(clang::SourceLocation HashLoc, const clang::Token &IncludeTok, clang::StringRef FileName, bool IsAngled,
-                            clang::CharSourceRange FilenameRange, const clang::FileEntry *File, clang::StringRef SearchPath,
+                            clang::CharSourceRange FilenameRange, llvm::Optional<clang::FileEntryRef> File, clang::StringRef SearchPath,
                             clang::StringRef RelativePath, const clang::Module *Imported, clang::SrcMgr::CharacteristicKind FileType) override;
 
 };
diff -up clazy-1.11/src/PreProcessorVisitor.cpp.omv~ clazy-1.11/src/PreProcessorVisitor.cpp
--- clazy-1.11/src/PreProcessorVisitor.cpp.omv~	2022-09-01 16:28:52.839479577 +0200
+++ clazy-1.11/src/PreProcessorVisitor.cpp	2022-09-01 16:29:11.694321863 +0200
@@ -185,7 +185,7 @@ void PreProcessorVisitor::MacroExpands(c
 
 void PreProcessorVisitor::InclusionDirective (clang::SourceLocation, const clang::Token &,
                                               clang::StringRef FileName, bool IsAngled, clang::CharSourceRange FilenameRange,
-                                              const clang::FileEntry *, clang::StringRef, clang::StringRef,
+                                              llvm::Optional<clang::FileEntryRef>, clang::StringRef, clang::StringRef,
                                               const clang::Module *, clang::SrcMgr::CharacteristicKind)
 {
    if (m_ci.getPreprocessor().isInPrimaryFile() && !clazy::endsWith(FileName.str(), ".moc")) {
diff -up clazy-1.11/src/PreProcessorVisitor.h.omv~ clazy-1.11/src/PreProcessorVisitor.h
--- clazy-1.11/src/PreProcessorVisitor.h.omv~	2022-09-01 16:28:36.431616697 +0200
+++ clazy-1.11/src/PreProcessorVisitor.h	2022-09-01 16:28:51.696489133 +0200
@@ -71,7 +71,7 @@ protected:
                       clang::SourceRange range, const clang::MacroArgs *) override;
     void InclusionDirective (clang::SourceLocation HashLoc, const clang::Token &IncludeTok,
                              clang::StringRef FileName, bool IsAngled, clang::CharSourceRange FilenameRange,
-                             const clang::FileEntry *File, clang::StringRef SearchPath, clang::StringRef RelativePath,
+                             llvm::Optional<clang::FileEntryRef> File, clang::StringRef SearchPath, clang::StringRef RelativePath,
                              const clang::Module *Imported, clang::SrcMgr::CharacteristicKind FileType) override;
 private:
     std::string getTokenSpelling(const clang::MacroDefinition &) const;
diff -up clazy-1.11/src/Utils.cpp.omv~ clazy-1.11/src/Utils.cpp
--- clazy-1.11/src/Utils.cpp.omv~	2022-09-01 16:45:41.252678269 +0200
+++ clazy-1.11/src/Utils.cpp	2022-09-01 16:45:56.375585453 +0200
@@ -670,7 +670,7 @@ const CXXRecordDecl *Utils::recordForMem
 bool Utils::isAscii(StringLiteral *lt)
 {
     // 'Ã©' for some reason has isAscii() == true, so also call containsNonAsciiOrNull
-    return lt && lt->isAscii() && !lt->containsNonAsciiOrNull();
+    return lt && !lt->containsNonAsciiOrNull();
 }
 
 bool Utils::isInDerefExpression(Stmt *s, ParentMap *map)
